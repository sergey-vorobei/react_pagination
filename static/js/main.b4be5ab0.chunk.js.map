{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","itemsOnPage","onPageChange","totalPagesNum","Math","ceil","pagesCount","className","classNames","disabled","href","onClick","map","page","active","item","perPageSelector","items","App","arrItems","Array","length","_","i","useSearchParams","searchParams","setSearchParams","parseInt","get","getPageItems","array","perNum","currentNum","startIndex","endIndex","min","slice","selectedItemsFromTo","firstItem","lastItem","id","value","onChange","event","preventDefault","target","num","htmlFor","content","currentTarget","textContent","currentTargetPage","Number","isNaN","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4be5ab0.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  itemsOnPage: string[] | number[],\n  onPageChange: (event:React.MouseEvent<HTMLAnchorElement>) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  itemsOnPage,\n  onPageChange,\n}) => {\n  const totalPagesNum: number = Math.ceil(total / perPage);\n  const pagesCount: number[] = getNumbers(1, totalPagesNum);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames('page-item', {\n            disabled: currentPage === 1,\n          })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={onPageChange}\n          >\n            «\n          </a>\n        </li>\n\n        {pagesCount.map((page) => (\n          <li\n            key={page}\n            className={classNames('page-item', {\n              active: currentPage === page,\n            })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={onPageChange}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={classNames('page-item', {\n            disabled: currentPage === totalPagesNum,\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === totalPagesNum}\n            onClick={onPageChange}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemsOnPage.map((item) => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { useSearchParams } from 'react-router-dom';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst total = 42;\nconst perPageSelector = [3, 5, 10, 20];\nconst items = getNumbers(1, total)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const arrItems = Array.from({ length: total }, (_, i) => i + 1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentPage = parseInt(searchParams.get('page') || '1', 10);\n  const perPage = parseInt(searchParams.get('perPage') || '5', 10);\n  const getPageItems = (\n    array: string[] | number[],\n    perNum: number,\n    currentNum: number,\n  ): string[] | number[] => {\n    const startIndex = (currentNum - 1) * perNum;\n    const endIndex = Math.min(startIndex + perNum, array.length);\n\n    const pageItems = array.slice(startIndex, endIndex);\n\n    return pageItems;\n  };\n\n  const selectedItemsFromTo = getPageItems(arrItems, perPage, currentPage);\n  const itemsOnPage = getPageItems(items, perPage, currentPage);\n  const totalPagesNum: number = Math.ceil(total / perPage);\n  const firstItem = selectedItemsFromTo[0];\n  const lastItem = selectedItemsFromTo[selectedItemsFromTo.length - 1];\n  const onPageChange = (event:React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    const content = event.currentTarget.textContent || '';\n    const currentTargetPage = parseInt(content || '0', 10);\n\n    if (!Number.isNaN(currentTargetPage) && currentPage !== currentTargetPage) {\n      setSearchParams({ page: content, perPage: perPage.toString() });\n    }\n\n    if (content === '«' && currentPage > 1) {\n      setSearchParams({\n        page: (currentPage - 1).toString(),\n        perPage: perPage.toString(),\n      });\n    }\n\n    if (content === '»' && currentPage < totalPagesNum) {\n      setSearchParams({\n        page: (currentPage + 1).toString(),\n        perPage: perPage.toString(),\n      });\n    }\n  };\n\n  const handleChangePer = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault();\n    setSearchParams({ page: '1', perPage: event.target.value });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={perPage}\n            className=\"form-control\"\n            onChange={handleChangePer}\n          >\n            {perPageSelector.map((num) => (\n              <option key={num} value={num}>{num}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        itemsOnPage={itemsOnPage}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}