{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","itemsOnPage","onPageChange","totalPagesNum","Math","ceil","pagesCount","className","classNames","disabled","href","onClick","map","page","active","item","App","useState","setCurrentPage","setPerPage","arrItems","Array","length","_","i","items","getPageItems","array","perNum","currentNum","startIndex","endIndex","min","slice","selectedItemsFromTo","firstItem","lastItem","id","value","onChange","event","preventDefault","target","num","htmlFor","content","currentTarget","textContent","currentTargetPage","parseInt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85d74413.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  itemsOnPage: string[] | number[],\n  onPageChange: (event:React.MouseEvent<HTMLAnchorElement>) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  itemsOnPage,\n  onPageChange,\n}) => {\n  const totalPagesNum: number = Math.ceil(total / perPage);\n  const pagesCount: number[] = getNumbers(1, totalPagesNum);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames('page-item', {\n            disabled: currentPage === 1,\n          })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={onPageChange}\n          >\n            «\n          </a>\n        </li>\n\n        {pagesCount.map((page) => {\n          return (\n            <li\n              key={page}\n              className={classNames('page-item', {\n                active: currentPage === page,\n              })}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={onPageChange}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n        <li\n          className={classNames('page-item', {\n            disabled: currentPage === totalPagesNum,\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === totalPagesNum}\n            onClick={onPageChange}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemsOnPage.map((item) => {\n          return <li key={item} data-cy=\"item\">{item}</li>;\n        })}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(5);\n  const perPageSelector = [3, 5, 10, 20];\n  const arrItems = Array.from({ length: total }, (_, i) => i + 1);\n  const items = getNumbers(1, total)\n    .map(n => `Item ${n}`);\n\n  const getPageItems = (\n    array: string[] | number[],\n    perNum: number,\n    currentNum: number,\n  ): string[] | number[] => {\n    const startIndex = (currentNum - 1) * perNum;\n    const endIndex = Math.min(startIndex + perNum, array.length);\n\n    const pageItems = array.slice(startIndex, endIndex);\n\n    return pageItems;\n  };\n\n  const selectedItemsFromTo = getPageItems(arrItems, perPage, currentPage);\n  const itemsOnPage = getPageItems(items, perPage, currentPage);\n  const totalPagesNum: number = Math.ceil(total / perPage);\n  const firstItem = selectedItemsFromTo[0];\n  const lastItem = selectedItemsFromTo[selectedItemsFromTo.length - 1];\n  const onPageChange = (event:React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    const content = event.currentTarget.textContent;\n    const currentTargetPage = parseInt(content || '0', 10);\n\n    if (currentPage !== currentTargetPage) {\n      setCurrentPage(currentTargetPage);\n    }\n\n    if (content === '«' && currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n\n    if (content === '»' && currentPage < totalPagesNum) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const handleChangePer = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault();\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={perPage}\n            className=\"form-control\"\n            onChange={handleChangePer}\n          >\n            {perPageSelector.map((num) => {\n              // eslint-disable-next-line max-len\n              return <option key={num} value={num}>{num}</option>;\n            })}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        itemsOnPage={itemsOnPage}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}